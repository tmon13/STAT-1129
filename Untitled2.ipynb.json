{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "951d91c3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "1\n",
      "2\n",
      "3\n",
      "4\n"
     ]
    }
   ],
   "source": [
    "n = 0\n",
    "while n < 10:\n",
    "    print(n)\n",
    "    if n == 4:\n",
    "        break\n",
    "    n += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c2a0a4e7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "1\n",
      "2\n",
      "3\n",
      "4\n",
      "5 is not less than 5\n"
     ]
    }
   ],
   "source": [
    "n=0\n",
    "while n < 5:\n",
    "    print(n)\n",
    "    n = n + 1\n",
    "else: \n",
    "    print(n, \"is not less than 5\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "50b35117",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "I like strawberry\n",
      "I like raspberry\n",
      "I like watermelon\n",
      "apple is really a fruit?\n"
     ]
    }
   ],
   "source": [
    "favfruits = [\"strawberry\", \"raspberry\", \"watermelon\", \"apple\"]\n",
    "a = 'apple'\n",
    "for fruit in favfruits:\n",
    "    if fruit == a:\n",
    "        print (fruit, \"is really a fruit?\")\n",
    "        break\n",
    "    else: \n",
    "        print(\"I like\", fruit)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "12d04580",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "465\n"
     ]
    }
   ],
   "source": [
    "n = 30\n",
    "summed = 0\n",
    "i = 1\n",
    "\n",
    "while i <= n:\n",
    "    summed = summed + i\n",
    "    i = i + 1\n",
    "\n",
    "print(summed)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "1462f2fd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The grade is B\n"
     ]
    }
   ],
   "source": [
    "score = 84\n",
    "if score >= 90:\n",
    "    print(\"The grade is A\")\n",
    "elif 80 <= score <= 90:\n",
    "    print(\"The grade is B\")\n",
    "elif 70 <= score <= 80:\n",
    "    print(\"The grade is C\")\n",
    "elif 60 <= score <= 70:\n",
    "    print(\"The grade is D\")\n",
    "else:\n",
    "    print(\"The grade is F\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "87693d69",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Andy 88\n",
      "Amy 66\n",
      "James 90\n",
      "Jules 55\n",
      "Arthur 77\n"
     ]
    }
   ],
   "source": [
    "gradebook = {'Andy': 88, 'Amy': 66, 'James': 90, 'Jules': 55, 'Arthur': 77}\n",
    "for student, grade in gradebook.items():\n",
    "    print(student, grade)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "1d859251",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "75.2\n"
     ]
    }
   ],
   "source": [
    "mean = sum(gradebook.values())/len(gradebook.values())\n",
    "print(mean)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a85be503",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "90"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max(gradebook.values())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "6f1fc2d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "55"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "min(gradebook.values())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "bcc66e07",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Andy\n",
      "Amy\n"
     ]
    }
   ],
   "source": [
    "for student in gradebook.keys():\n",
    "    if 'J' in student:\n",
    "        break\n",
    "    print(student)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f81a0586",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Andy\n",
      "Amy\n",
      "Arthur\n"
     ]
    }
   ],
   "source": [
    "for student in gradebook.keys():\n",
    "    if 'J' in student:\n",
    "        continue\n",
    "    print(student)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a1962f52",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
